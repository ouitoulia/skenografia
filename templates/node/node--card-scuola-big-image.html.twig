{#
/**
 * @file
 * Default theme implementation to card display a node.
 * To activate this template you need to add a display named 'card'.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */
#}
{% apply spaceless %}
  {% set node_variants_map = {
    'persona': 'redbrown',
    'luogo': 'redbrown',
    'documento': 'redbrown',
    'struttura-organizzativa': 'redbrown',
    'servizio': 'purplelight',
    'percorso-di-studio': 'purplelight',
    'article': 'greendark',
    'circolare': 'greendark',
    'evento': 'greendark',
    'scheda-didattica': 'bluelectric',
    'progetto': 'bluelectric',
    'classe': 'bluelectric'
  } %}

  {% set node_default_image_map = {
    'persona': 'icon-user',
    'luogo': 'icon-marker-simple',
    'documento': 'it-files',
    'struttura-organizzativa': 'icon-school-building',
    'servizio': 'icon-service',
    'percorso-di-studio': 'icon-road',
    'article': 'icon-newspaper',
    'circolare': 'icon-news',
    'evento': 'icon-calendar',
    'scheda-didattica': 'icon-timetable',
    'progetto': 'icon-books',
    'classe': 'icon-classes'
  } %}

  {# Image #}
  {% if content.field_copertina[0] %}
    {% set _image = content.field_copertina[0] %}
  {% else %}
    {% set _image %}
      {% include '@bi-bcl/icon/icon.html.twig' with {
        name: node_default_image_map[node.bundle|clean_id],
        color: node_variants_map[node.bundle|clean_id],
        size: 'xxxl',
        icon_classes: ['position-absolute', 'bottom-0', 'end-0', 'opacity-25', 'me-3', 'mb-3']
      } %}
    {% endset %}
  {% endif %}

  {# Format date #}
  {% set date_card_format = date|split(' ') %}
  {% set date_card = {'day': date_card_format[0], 'month': date_card_format[1], 'year': date_card_format[2]} %}

  {% include '@skenografia_components/card/card-article.html.twig' with {
    card_article_variant: node_variants_map[node.bundle|clean_id] ?? 'petrol',
    card_image: _image,
    card_image_date: node.bundle|clean_id == 'article' or node.bundle|clean_id == 'circolare' ? date_card,
    card_attributes: attributes
  } %}
{% endapply %}
