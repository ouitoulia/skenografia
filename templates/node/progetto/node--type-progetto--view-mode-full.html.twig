{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'node',
  'article-wrapper',
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
]
%}

<section class="section bg-white article-title">
  <div class="container">
    <div class="row variable-gutters">
      <div class="col-md-6 order-md-2">{{ content.field_copertina }}</div>
      <div class="col-md-6 order-md-1 d-flex align-items-center">
        <div class="title-content pt-5">
          <small class="h6 text-bluelectric text-uppercase">{{ content.field_tipologia_progetto }}</small>
          <h1{{ title_attributes }}>{{ label }}</h1>
          {{ content.field_abstract }}
          {{ content.field_anno_scolastico }}
          <aside class="badges-wrapper badges-main">{{ content.field_argomenti }}</aside>
        </div>
      </div>
    </div>
  </div>
</section>

<section class="bg-bluelectric py-2">
  <div class="container">
    <div class="row variable-gutters">
      <div class="col d-flex align-items-center fw-bold">
        {{ content.field_stato_progetto }}
      </div>
    </div>
  </div>
</section>

<section class="section bg-white">
  <div class="container container-border-top">
    <div class="row variable-gutters">
      <div class="col-lg-3 col-md-4 border-end px-0">
        <aside>
          {{ content.toc_js }}
        </aside>
      </div>
      <div class="col-lg-8 col-md-8 offset-lg-1 pt-5">

        <article{{ attributes.addClass(classes) }}>

          <div class="row variable-gutters">
            <div class="col-lg-12 d-flex justify-content-end">
              {% set _raw_tags = [] %}
              {% for tag in content.field_argomenti %}
                {% if tag['#title'] %}
                  {% set _raw_tags = _raw_tags|merge([tag['#title']]) %}
                {% endif %}
              {% endfor %}
              {% include '@bi-bcl/share/content-actions.twig' with {
                description: content.field_abstract|render|striptags|trim,
                dropdown_button_classes: ['text-bluelectric'],
                dropdown_icon_color: 'bluelectric',
                dropdown_icon_size: 'xs',
              } %}
              {% include '@bi-bcl/share/share-this.twig' with {
                tags: _raw_tags|join(','),
                dropdown_button_classes: ['text-bluelectric'],
                dropdown_icon_color: 'bluelectric',
                dropdown_icon_size: 'xs',
              } %}
            </div>
          </div>

          <div{{ content_attributes.addClass(['node__content','pt-5']) }}>

            <h2 class="h4">Presentazione</h2>
            <h3 class="h5">Durata</h3>
            <div class="text-bluelectric mb-3 fw-bold">
              {% set giorno_inizio = content.field_data_inizio[0]['#attributes']['datetime']|date('Y-m-d') %}
              {% set giorno_fine = content.field_data_fine[0]['#attributes']['datetime']|date('Y-m-d') %}
              {% if giorno_inizio == giorno_fine %}
                il {{ content.field_data_inizio }} dalle {{ content.field_data_inizio[0]['#attributes']['datetime']|date('H:i') }} alle {{ content.field_data_fine[0]['#attributes']['datetime']|date('H:i') }}
              {% else %}
                dal {{ content.field_data_fine }} al {{ content.field_data_inizio }}
              {% endif %}
            </div>


            {{ content|without(
              'field_copertina',
              'field_tipologia_progetto',
              'field_abstract',
              'field_anno_scolastico',
              'field_argomenti',
              'field_stato_progetto',
              'toc_js',
              'field_data_inizio',
              'field_data_fine',
              'field_servizio'
            ) }}

            <h2 id="art-par-05" class="h4">Documenti</h2>

            {{ content.field_servizio }}

          </div>

          {% include '@skenografia/node/_partial.content-type--footer-metadata.html.twig' %}
          {% include '@skenografia/node/_partial.node--comments.html.twig' %}

        </article>

      </div>
    </div>
  </div>
  <span class="sticky-toc-stop"></span>
</section>
